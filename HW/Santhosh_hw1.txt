Questions:

1. (10pts) First, create a Linux folder in your home directory called “Homework” using Linux
commands. Then enter this folder. Visit the HDFS path /user/ever930/hw1 using Hadoop
commands and check what file is in there. There should be a file, which stores the taxi trip
data for NYC in August 2014. Obtain this file from HSDF and save it (use the same file name)
into the Linux folder “Homework” you just created. Submit the Linux/HDFS commands in
every step. One in each line. Do not take screenshots.

2. (20 pts) Start Hive. Create a new database named after your hawkid. Create a Hive table
“nyc_taxi_Aug” for the NYC Yellow Taxi Data (August 2014). Load all the yellow taxi August
2014 data into the nyc_taxi_Aug table. Make sure to check the headers. There are two rows
in the file before the data, where the first row is the column names and the second row is a
blank row.

3. (20 pts) Write a HiveQL query to show the top 10 longest trips in the nyc_taxi_Aug table.Show all the columns. Sort the results by distance in descending order.

4. (20 pts) The drop-off/pick-up area of the LaGuardia Airport is between latitudes [40.766703,40.774724] and longitudes [-73.877101, -73.859692]. Write a Hive query to find the totalnumber of passengers picked up by yellow taxi at this airport during each hour of day (0 ~23) in the whole month. Sort the rows by hour in ascending order.

5. (30 pts) Calculate the average speed of taxis in NYC during each hour of day (0-23) on August
15. The average speed within an hour is calculated as the average of the speed of all the trips
that started and ended both in this hourly slot. Ignore trips that run across different hourly
slots. The speed of a single trip is calculated as total distance divided by total time duration
(miles/hour). Sort the results by hour in ascending order.

----------------------------------------------------------------------------------------------------------------------------

Question 1:
    - mkdir Homework
    - hdfs dfs -ls /user/ever930/hw1 (we have the file yellow_tripdata_2014-08.csv)
    - hdfs dfs -get /user/ever930/hw1/yellow_tripdata_2014-08.csv Homework/

Question 2: 
    - Create Database smurugesan;
    - Create table command
      CREATE TABLE IF NOT EXISTS nyc_taxi_Aug (vendor_id String,pickup_datetime timestamp,dropoff_datetime timestamp,passenger_count int,trip_distance double,pickup_longitude double,pickup_latitude double,rate_code int,store_and_fwd_flag char(1),dropoff_longitude double,dropoff_latitude double,payment_type CHAR(3),fare_amount double,surcharge double,mta_tax double,tip_amount double,tolls_amount double,total_amount double) ROW FORMAT DELIMITED FIELDS TERMINATED BY ','LINES TERMINATED BY '\n'STORED AS TEXTFILE tblproperties("skip.header.line.count"="2");
    - more yellow_tripdata_2014-08.csv (1 header and 1 blank space at top)
    - Load csv data command
      Load data local inpath "yellow_tripdata_2014-08.csv" into table nyc_taxi_aug;

Question 3:
    - SELECT * FROM nyc_taxi_aug ORDER BY trip_distance desc LIMIT 10;

Question 4:
    -- In this query we are initially filtering by latitude and longitude range and then grouping by hour and finally summing up the passenget count and displaying the result.

    select hour(pickup_datetime) as hr, sum(passenger_count) from nyc_taxi_aug where pickup_latitude > 40.766703 and pickup_latitude < 40.774724 and pickup_longitude > -73.877101 and pickup_longitude < -73.859692 GROUP BY hour(pickup_datetime) ORDER BY hr;

Question 5:
    -- In this query initially we are filtering by day (to match Aug 15 and get all rides on Aug 15) and then filtering once again by choosing rides whose pick up time and drop time are same. Later we are calculating the avg speed of the taxies by using the following formula
    
    -- avg speed (miles/ minute) = sum(trip_distance) / sum(minute(dropoff_datetime) - minute(pickup_datetime)

    -- later we are multiplying the above result by 60 to get the speed in miles/hour avg_speed (miles/hour) = 60 * avg speed (miles/ minute)

    - select 60 * sum(trip_distance)/sum(minute(dropoff_datetime) - minute(pickup_datetime)), hour(pickup_datetime) as hr from nyc_taxi_aug where day(dropoff_datetime)=15 and hour(pickup_datetime) = hour(dropoff_datetime) GROUP BY hour(pickup_datetime) ORDER BY hr;
